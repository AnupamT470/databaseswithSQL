// Aggregate
Aggregate functions are used to perform calculations and return a single value.

The most common aggregate functions are:

COUNT(): returns the number of rows.
MAX(): returns the largest value in a column.
MIN(): returns the smallest value in a column.
SUM(): returns the total sum in a column.
AVG(): returns the average value in a column.

// # COUNT()
The first aggregate function we will learn is the COUNT() function. It's exactly how it sounds!

The COUNT() function counts the number of rows:

SELECT COUNT(*)
FROM table_name;

// min and max
MIN() and MAX() are exactly how they sound: they return the minimum and maximum value in a column, respectively.

For example, this returns the smallest value in the plays column:

SELECT MIN(plays)
FROM playlist;
.

This finds the most popular song in the table:

SELECT title, artist, MAX(plays)
FROM playlist;


// sum

SELECT SUM(plays)
FROM playlist;



//GROUP BY
The GROUP BY statement groups rows of data with the same values into buckets. It’s often used with aggregate functions to group the result by one or more columns.

# GROUP BY
Now, knowing aggregate functions like COUNT() and AVG(), it’s time to bring GROUP BY into the fold. This is one of the most useful tools in SQL.

The GROUP BY statement groups rows of data with the same values into buckets. It’s often used with aggregate functions to group the result by one or more columns.

So what the heck does that mean? Let’s show it because it’s easier that way:

SELECT genre, COUNT(*) 
FROM playlist 
GROUP BY genre;

What this does is we are grouping together all the different genres and displaying two columns: the genre and the count of that genre.

It will look something like:

genre	COUNT(*)
Indie Rock	6
R&B	8
K-Pop	2
Let’s try another one.

Suppose we want to see the average song lengths for each genre, we can do:

SELECT genre, AVG(duration)
FROM playlist 
GROUP BY genre;

Here, we are grouping together all the different genres and displaying two columns – the genre and the average of the song length for that genre.

It will look something like:

genre	AVG(duration)
Indie Rock	245.33
R&B	213
K-Pop	193.5

